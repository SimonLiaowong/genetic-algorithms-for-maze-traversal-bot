-How you tested your code and chose the parameters of your genetic algorithm, e.g.,
-What fraction of each population you decided to be fit enough to "mate".
I used best 10% of the total population.
-How you arranged the mating and mutations.
I randomly select parent from the best 10% pool. Mating them creates one child.
The child is one-third likely to mutate. The number of mutation time relate to the number of generation.
The higher generation mutate often than the lower ones.  

-How well your overall fittest evolved Picobot program performed and how it did so.
it did okay but it can do better.  Each of mygeneration has a 30 second generation time on my computer. I can evolve the program to about 60% fitness.
Howevre, it can not break through to over 70%. 


-Please include your most-fit Picobot program, too, in a comment—along with its fitness—that way, we can run it!
fitness is 0.6726399999999999 

0 NExx -> S 3
0 NxWx -> E 4
0 Nxxx -> E 2
0 xExS -> W 3
0 xExx -> N 2
0 xxWS -> N 3
0 xxWx -> E 4
0 xxxS -> N 4
0 xxxx -> E 3
1 NExx -> S 1
1 NxWx -> E 2
1 Nxxx -> E 1
1 xExS -> N 4
1 xExx -> S 1
1 xxWS -> N 4
1 xxWx -> E 4
1 xxxS -> E 2
1 xxxx -> S 1
2 NExx -> S 2
2 NxWx -> S 4
2 Nxxx -> E 2
2 xExS -> N 2
2 xExx -> W 1
2 xxWS -> E 1
2 xxWx -> N 2
2 xxxS -> N 4
2 xxxx -> W 1
3 NExx -> W 2
3 NxWx -> S 4
3 Nxxx -> S 1
3 xExS -> N 2
3 xExx -> W 4
3 xxWS -> N 2
3 xxWx -> S 4
3 xxxS -> N 3
3 xxxx -> W 3
4 NExx -> S 4
4 NxWx -> S 2
4 Nxxx -> S 1
4 xExS -> N 3
4 xExx -> S 1
4 xxWS -> E 1
4 xxWx -> S 1
4 xxxS -> N 2
4 xxxx -> N 4

